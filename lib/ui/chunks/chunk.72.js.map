{"version":3,"sources":["webpack:///./src/ui/src/components/OfficeEditorColumnsModal/OfficeEditorColumnsModal.scss?b54f","webpack:///./src/ui/src/components/OfficeEditorColumnsModal/OfficeEditorColumnsModal.scss","webpack:///./src/ui/src/components/OfficeEditorColumnsModal/OfficeEditorColumnsModal.js","webpack:///./src/ui/src/components/OfficeEditorColumnsModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","OfficeEditorColumnsModal","t","useTranslation","dispatch","useDispatch","columnTranslation","OFFICE_EDITOR_TRANSLATION_PREFIX","currentUnit","useSelector","selectors","getOfficeEditorUnitMeasurement","useState","initialUnit","setInitialUnit","columnAmount","setColumnAmount","columns","setColumns","inputColumns","setInputColumns","equalColumns","setEqualColumns","availablePageWidth","setAvailablePageWidth","maxAllowedColumns","setMaxAllowedColumns","useEffect","core","getOfficeEditor","getEditingPageNumber","pageNumber","pageWidthInInch","getDocumentViewer","getPageWidth","PIXELS_PER_INCH","pageWidthInCurrentUnit","convertMeasurementUnit","MARGIN_UNITS","INCH","getSectionMargins","margins","getSectionColumns","sectionColumns","parsedColumns","parseColumns","allColumnsEqual","checkEqualColumnWidths","left","right","Math","ceil","formatColumns","setInitialData","convertedColumns","map","column","width","spacing","unit","formattedColumns","getDefaultColumnSpacing","formatToDecimalString","floor","getMinimumColumnWidth","rebalanceColumnWidthAndSpacingEvenly","addOrRemoveColumns","newColumnAmount","prevColumns","slice","newColumns","columnCount","referenceSpacing","singleColumn","spacingCount","newTotalSpacing","newTotalWidth","minRequiredSpace","extraWidthNeeded","floorNumberToDecimals","Array","fill","max","handleColumnBlur","value","index","type","minimumColumnWidth","maxColumnWidth","maxColumnSpacing","minimumValue","COLUMN_INPUT_TYPES","WIDTH","maxValue","newValue","parseFloat","isNaN","initialColumns","availableSpacing","newSpacing","SPACING","availableWidth","newWidth","lastColumnSpacing","excessAmount","reduce","acc","modifiedResults","modifyColumns","startIndex","endIndex","numberOfColumns","nextColumns","excessAmountRemaining","modifyColumnsInReverse","skipIndex","rebalanceInputs","min","onApply","columnsData","pop","setCustomSectionColumns","closeModal","actions","closeElement","DataElements","OFFICE_EDITOR_COLUMNS_MODAL","closeModalAndFocus","focusContent","inputElements","Object","values","inputType","id","label","onChange","updatedColumns","toString","handleColumnChange","onBlur","className","data-element","ModalWrapper","title","closehandler","onCloseClick","swipeToClose","isOpen","htmlFor","Input","e","parseInt","handleColumnAmountChange","target","step","Dropdown","dataElement","OFFICE_EDITOR_COLUMN_UNIT","labelledById","items","onClickItem","setOfficeEditorUnitMeasurement","getKey","item","currentSelectionKey","columnIndex","columnNumber","key","input","isLastColumn","isSpacingInput","shouldRender","shouldDisable","valueAsNumber","aria-label","disabled","Choice","checked","aria-checked","Button","onClick"],"mappings":"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","file":"chunks/chunk.72.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OfficeEditorColumnsModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.OfficeEditorColumnsModal{visibility:visible}.closed.OfficeEditorColumnsModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.OfficeEditorColumnsModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover);border-color:var(--primary-button-hover);color:var(--gray-0)}.OfficeEditorColumnsModal .footer .modal-button.confirm{background:var(--primary-button);border-color:var(--primary-button);color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer .modal-button.confirm.disabled{cursor:default;background:var(--disabled-button-color);color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer .modal-button.confirm.disabled span{color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer .modal-button.cancel:hover,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom:hover{border:none;box-shadow:inset 0 0 0 1px var(--blue-6);color:var(--blue-6)}.OfficeEditorColumnsModal .footer .modal-button.cancel,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom{border:none;box-shadow:inset 0 0 0 1px var(--primary-button);color:var(--primary-button)}.OfficeEditorColumnsModal .footer .modal-button.cancel.disabled,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom.disabled{cursor:default;border:none;box-shadow:inset 0 0 0 1px rgba(43,115,171,.5);color:rgba(43,115,171,.5)}.OfficeEditorColumnsModal .footer .modal-button.cancel.disabled span,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom.disabled span{color:rgba(43,115,171,.5)}.OfficeEditorColumnsModal{position:fixed;left:0;bottom:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.OfficeEditorColumnsModal .modal-container .wrapper .modal-content{padding:10px}.OfficeEditorColumnsModal .footer{flex-direction:row;width:100%;margin-top:13px}.OfficeEditorColumnsModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.OfficeEditorColumnsModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.OfficeEditorColumnsModal .footer .modal-button.confirm{margin-left:4px}.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom{border-radius:4px;padding:2px 20px 4px;cursor:pointer}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .OfficeEditorColumnsModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .OfficeEditorColumnsModal .footer .modal-button{padding:23px 8px}}.OfficeEditorColumnsModal .swipe-indicator{background:var(--swipe-indicator-bg);border-radius:2px;height:4px;width:38px;position:absolute;top:12px;margin-left:auto;margin-right:auto;left:0;right:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .OfficeEditorColumnsModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .OfficeEditorColumnsModal .swipe-indicator{display:none}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .OfficeEditorColumnsModal .swipe-indicator{width:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .OfficeEditorColumnsModal .swipe-indicator{width:32px}}.OfficeEditorColumnsModal{flex-direction:column}.OfficeEditorColumnsModal .modal-container{display:flex;flex-direction:column;height:auto;width:480px}.OfficeEditorColumnsModal .modal-body{padding:16px;display:flex;flex-direction:row;flex-wrap:wrap;font-size:var(--font-size-default);font-family:var(--font-family);grid-gap:16px;gap:16px}.OfficeEditorColumnsModal .modal-body .title{line-height:16px;font-weight:var(--font-weight-bold)}.OfficeEditorColumnsModal .input-container{display:flex;flex-direction:column;grid-gap:8px;gap:8px}.OfficeEditorColumnsModal .input-container .modal-label{color:var(--gray-12)}.OfficeEditorColumnsModal .input-container .ui__input__wrapper{width:auto;max-width:216px}.OfficeEditorColumnsModal .input-container .ui__input{border-color:var(--gray-6);position:relative}.OfficeEditorColumnsModal .input-container .ui__input.ui__input--focused{box-shadow:none;border-color:var(--focus-border)}.OfficeEditorColumnsModal .input-container .ui__input[\\\\:has\\\\(\\\\:disabled\\\\)]{border-color:var(--gray-5)}.OfficeEditorColumnsModal .input-container .ui__input:has(:disabled){border-color:var(--gray-5)}.OfficeEditorColumnsModal .input-container input{padding:8px 40px 8px 8px;height:32px;font-size:var(--font-size-default);width:100%}.OfficeEditorColumnsModal .input-container input[type=number]{-moz-appearance:textfield}.OfficeEditorColumnsModal .input-container input:disabled{opacity:1}.OfficeEditorColumnsModal .input-container input::-webkit-inner-spin-button,.OfficeEditorColumnsModal .input-container input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.OfficeEditorColumnsModal .flex-half{flex-basis:calc(50% - 8px)}.OfficeEditorColumnsModal .flex-full{flex-basis:100%}.OfficeEditorColumnsModal .flex-third{flex-basis:calc(33.33333% - 8px)}.OfficeEditorColumnsModal .footer{padding:16px;display:flex;justify-content:flex-end;border-top:1px solid var(--gray-5)}.OfficeEditorColumnsModal .footer button{border:none;border-radius:4px;background:var(--primary-button);min-width:59px;width:auto;padding:8px 16px;height:32px;color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer button:hover{background:var(--primary-button-hover)}.OfficeEditorColumnsModal .unit-dropdown.Dropdown{height:34px}.OfficeEditorColumnsModal .unit-dropdown .Dropdown__items{width:100%}.OfficeEditorColumnsModal .input-container .ui__input input[type=number].column-amount-input{-moz-appearance:auto;padding-right:8px}.OfficeEditorColumnsModal .input-container .ui__input input.column-amount-input::-webkit-inner-spin-button,.OfficeEditorColumnsModal .input-container .ui__input input.column-amount-input::-webkit-outer-spin-button{-webkit-appearance:auto}.OfficeEditorColumnsModal .section{width:100%;border-top:1px solid var(--gray-5)}.OfficeEditorColumnsModal .section .section-label{font-weight:var(--font-weight-bold);padding:2px 0;margin:16px 0}.OfficeEditorColumnsModal .section .row{display:flex;align-items:center;grid-gap:8px;gap:8px}.OfficeEditorColumnsModal .section .row.columns-headers{padding:2px 0;margin-bottom:8px}.OfficeEditorColumnsModal .section .columns-container{height:156px;background-color:var(--gray-2);overflow:auto;border:1px solid var(--gray-5)}.OfficeEditorColumnsModal .section .columns-container .row{background-color:var(--gray-0);padding:7px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport core from 'core';\nimport DataElements from 'constants/dataElement';\nimport Button from 'components/Button';\nimport ModalWrapper from 'components/ModalWrapper';\nimport Dropdown from 'components/Dropdown';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport {\n  focusContent,\n  formatToDecimalString,\n  getMinimumColumnWidth,\n  getDefaultColumnSpacing,\n  convertMeasurementUnit,\n  floorNumberToDecimals,\n} from 'helpers/officeEditor';\nimport {\n  modifyColumns,\n  modifyColumnsInReverse,\n  checkEqualColumnWidths,\n} from 'helpers/officeEditorColumnsHelper';\nimport {\n  OFFICE_EDITOR_TRANSLATION_PREFIX,\n  PIXELS_PER_INCH,\n  MARGIN_UNITS,\n  COLUMN_INPUT_TYPES,\n} from 'constants/officeEditor';\n\nimport './OfficeEditorColumnsModal.scss';\n\nconst OfficeEditorColumnsModal = () => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const columnTranslation = t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}column`);\n\n  const currentUnit = useSelector(selectors.getOfficeEditorUnitMeasurement);\n  const [initialUnit, setInitialUnit] = useState(currentUnit);\n  const [columnAmount, setColumnAmount] = useState(0);\n  const [columns, setColumns] = useState([]); // [{ width: 0, spacing: 0 }]\n  const [inputColumns, setInputColumns] = useState([]); // [{ width: 0, spacing: 0 }]\n  const [equalColumns, setEqualColumns] = useState(true);\n  const [availablePageWidth, setAvailablePageWidth] = useState(0);\n  const [maxAllowedColumns, setMaxAllowedColumns] = useState(0);\n\n  const handleUnitChange = (unit) => dispatch(actions.setOfficeEditorUnitMeasurement(unit));\n\n  useEffect(() => {\n    const setInitialData = async () => {\n      const pageNumber = await core.getOfficeEditor().getEditingPageNumber();\n      const pageWidthInInch = core.getDocumentViewer().getPageWidth(pageNumber) / PIXELS_PER_INCH;\n      const pageWidthInCurrentUnit = convertMeasurementUnit(pageWidthInInch, MARGIN_UNITS.INCH, currentUnit);\n      const margins = await core.getOfficeEditor().getSectionMargins(currentUnit);\n      const sectionColumns = await core.getOfficeEditor().getSectionColumns(currentUnit);\n      const parsedColumns = parseColumns(sectionColumns, currentUnit);\n      const allColumnsEqual = checkEqualColumnWidths(sectionColumns);\n\n      setInitialUnit(currentUnit);\n      setAvailablePageWidth(pageWidthInCurrentUnit - margins.left - margins.right);\n      setColumnAmount(Math.ceil(sectionColumns.length / 2));\n      setEqualColumns(allColumnsEqual);\n      setColumns(parsedColumns);\n      setInputColumns(formatColumns(parsedColumns));\n    };\n    setInitialData();\n  }, []);\n\n  useEffect(() => {\n    if (currentUnit === initialUnit) {\n      return;\n    }\n    setInitialUnit(currentUnit);\n\n    const pageWidthInCurrentUnit = convertMeasurementUnit(availablePageWidth, initialUnit, currentUnit);\n    setAvailablePageWidth(pageWidthInCurrentUnit);\n\n    const convertedColumns = columns.map((column) => ({\n      width: convertMeasurementUnit(column.width, initialUnit, currentUnit),\n      spacing: convertMeasurementUnit(column.spacing, initialUnit, currentUnit),\n    }));\n    setColumns(convertedColumns);\n    setInputColumns(formatColumns(convertedColumns));\n  }, [currentUnit, initialUnit]);\n\n  const parseColumns = (sectionColumns, unit) => {\n    let formattedColumns = [];\n    for (let i = 0; i < sectionColumns.length; i += 2) {\n      const width = sectionColumns[i];\n      const spacing = sectionColumns[i + 1] ?? getDefaultColumnSpacing(unit);\n      formattedColumns.push({ width, spacing });\n    }\n    return formattedColumns;\n  };\n\n  const formatColumns = (columns) => {\n    return columns.map((column) => ({\n      width: formatToDecimalString(column.width),\n      spacing: formatToDecimalString(column.spacing),\n    }));\n  };\n\n  // useEffect for recalculating max allowed columns\n  useEffect(() => {\n    setMaxAllowedColumns(Math.floor(availablePageWidth / getMinimumColumnWidth(currentUnit)));\n  }, [availablePageWidth, currentUnit]);\n\n  useEffect(() => {\n    if (columns.length < 1) {\n      return;\n    }\n    if (equalColumns) {\n      rebalanceColumnWidthAndSpacingEvenly(columns);\n    }\n  }, [equalColumns, columns.length, availablePageWidth]);\n\n  const handleColumnAmountChange = (value) => {\n    let newColumnAmount = parseInt(value);\n    if (isNaN(newColumnAmount) || newColumnAmount < 1) {\n      newColumnAmount = 1;\n    }\n\n    if (newColumnAmount === columns.length) {\n      return;\n    }\n\n    if (newColumnAmount > maxAllowedColumns) {\n      newColumnAmount = maxAllowedColumns;\n    }\n    setColumnAmount(newColumnAmount);\n\n    const newColumns = addOrRemoveColumns(newColumnAmount, columns);\n    setColumns(newColumns);\n    setInputColumns(formatColumns(newColumns));\n    rebalanceColumnWidthAndSpacingEvenly(newColumns);\n  };\n\n  const addOrRemoveColumns = (newColumnAmount, prevColumns) => {\n    if (newColumnAmount === prevColumns.length) {\n      return prevColumns;\n    }\n\n    if (newColumnAmount < prevColumns.length) {\n      return prevColumns.slice(0, newColumnAmount);\n    }\n\n    // Add columns if new amount is more than current amount\n    const newColumns = [...prevColumns];\n    for (let i = columns.length + 1; i <= newColumnAmount; i++) {\n      newColumns.push({\n        width: 0,\n        spacing: getDefaultColumnSpacing(currentUnit),\n      });\n    }\n    return newColumns;\n  };\n\n  const rebalanceColumnWidthAndSpacingEvenly = (columns) => {\n    const columnCount = columns.length;\n    let referenceSpacing = columns[0].spacing;\n    if (columnCount === 1) {\n      const singleColumn = [{\n        width: availablePageWidth,\n        spacing: referenceSpacing,\n      }];\n      setColumns(singleColumn);\n      setInputColumns(formatColumns(singleColumn));\n      return;\n    }\n\n    const spacingCount = columnCount - 1;\n    let newTotalSpacing = spacingCount * referenceSpacing;\n    let newTotalWidth = availablePageWidth - newTotalSpacing;\n    const minRequiredSpace = getMinimumColumnWidth(currentUnit) * columnCount;\n    if (newTotalWidth < minRequiredSpace) {\n      const extraWidthNeeded = minRequiredSpace - newTotalWidth;\n      newTotalWidth += extraWidthNeeded;\n      newTotalSpacing -= extraWidthNeeded;\n      referenceSpacing = floorNumberToDecimals(newTotalSpacing / spacingCount);\n    }\n    const newColumns = new Array(columnCount).fill().map(() => ({\n      width: floorNumberToDecimals(newTotalWidth / columnCount),\n      spacing: Math.max(referenceSpacing, 0),\n    }));\n    setColumns(newColumns);\n    setInputColumns(formatColumns(newColumns));\n  };\n\n  const handleColumnChange = (value, index, type) => {\n    const updatedColumns = [...inputColumns];\n    updatedColumns[index] = {\n      width: (type === COLUMN_INPUT_TYPES.WIDTH ? value : updatedColumns[index].width).toString(),\n      spacing: (type === COLUMN_INPUT_TYPES.SPACING ? value : updatedColumns[index].spacing).toString(),\n    };\n    setInputColumns(updatedColumns);\n  };\n\n  const rebalanceInputs = (newValue, index, type, initialColumns) => {\n    let newColumns = [...initialColumns];\n    const columnCount = initialColumns.length;\n    if (equalColumns) {\n      if (type === COLUMN_INPUT_TYPES.WIDTH) {\n        const availableSpacing = availablePageWidth - (newValue * columnCount);\n        const newSpacing = floorNumberToDecimals(availableSpacing / (columnCount - 1));\n        newColumns = newColumns.map(() => ({\n          width: newValue,\n          spacing: newSpacing,\n        }));\n      } else if (type === COLUMN_INPUT_TYPES.SPACING) {\n        const availableWidth = availablePageWidth - (newValue * (columnCount - 1));\n        const newWidth = floorNumberToDecimals(availableWidth / columnCount);\n        newColumns = newColumns.map(() => ({\n          width: newWidth,\n          spacing: newValue,\n        }));\n      }\n      return newColumns;\n    }\n\n    // Not Equal Columns\n    newColumns[index] = {\n      width: (type === COLUMN_INPUT_TYPES.WIDTH ? newValue : newColumns[index].width),\n      spacing: (type === COLUMN_INPUT_TYPES.SPACING ? newValue : newColumns[index].spacing),\n    };\n    // Calculate excess amount.\n    const lastColumnSpacing = parseFloat(newColumns[columnCount - 1].spacing);\n    const totalWidthAndSpacing = newColumns.reduce((acc, column) => acc + parseFloat(column.width) + parseFloat(column.spacing), -lastColumnSpacing); // Ignore last column spacing\n    let excessAmount = totalWidthAndSpacing - availablePageWidth;\n    let modifiedResults = {};\n\n    // take from or add to subsequent widths\n    modifiedResults = modifyColumns({\n      columns: newColumns,\n      excessAmount,\n      startIndex: index + 1,\n      endIndex: columnCount - 1,\n      numberOfColumns: columnCount - index - 1,\n      type: COLUMN_INPUT_TYPES.WIDTH\n    });\n    newColumns = [...modifiedResults.nextColumns];\n    excessAmount = modifiedResults.excessAmountRemaining;\n\n    if (excessAmount === 0) {\n      return newColumns;\n    }\n\n    if (type === COLUMN_INPUT_TYPES.WIDTH) {\n      // take from or add to spacing\n      modifiedResults = modifyColumnsInReverse({\n        columns: newColumns,\n        excessAmount,\n        startIndex: columnCount - 2,\n        endIndex: 0,\n        numberOfColumns: columnCount - 1,\n        type: COLUMN_INPUT_TYPES.SPACING\n      });\n      newColumns = [...modifiedResults.nextColumns];\n      excessAmount = modifiedResults.excessAmountRemaining;\n\n      if (excessAmount === 0) {\n        return newColumns;\n      }\n\n      // take from or add to previous widths\n      modifiedResults = modifyColumnsInReverse({\n        columns: newColumns,\n        excessAmount,\n        startIndex: index - 1,\n        endIndex: 0,\n        numberOfColumns: index,\n        type: COLUMN_INPUT_TYPES.WIDTH\n      });\n      newColumns = [...modifiedResults.nextColumns];\n      excessAmount = modifiedResults.excessAmountRemaining;\n\n      if (excessAmount === 0) {\n        return newColumns;\n      }\n    } else if (type === COLUMN_INPUT_TYPES.SPACING) {\n      // take from or add to previous widths equally\n      modifiedResults = modifyColumns({\n        columns: newColumns,\n        excessAmount,\n        startIndex: 0,\n        endIndex: index,\n        numberOfColumns: index + 1,\n        type: COLUMN_INPUT_TYPES.WIDTH\n      });\n      newColumns = [...modifiedResults.nextColumns];\n      excessAmount = modifiedResults.excessAmountRemaining;\n\n      if (excessAmount === 0) {\n        return newColumns;\n      }\n\n      // take from or add to spacing, other than index\n      modifiedResults = modifyColumnsInReverse({\n        columns: newColumns,\n        excessAmount,\n        startIndex: columnCount - 2,\n        endIndex: 0,\n        numberOfColumns: columnCount - 2,\n        type: COLUMN_INPUT_TYPES.SPACING,\n        skipIndex: index\n      });\n      newColumns = [...modifiedResults.nextColumns];\n    }\n    return newColumns;\n  };\n\n  const handleColumnBlur = (value, index, type) => {\n    // Validate input limits\n    const columnCount = columns.length;\n    const minimumColumnWidth = getMinimumColumnWidth(currentUnit);\n    const maxColumnWidth = (equalColumns) ?\n      availablePageWidth / columnCount :\n      availablePageWidth - ((columnCount - 1) * minimumColumnWidth);\n\n    const maxColumnSpacing = (equalColumns) ?\n      (availablePageWidth - (minimumColumnWidth * columnCount)) / (columnCount - 1) :\n      availablePageWidth - (minimumColumnWidth * columnCount);\n\n    const minimumValue = (type === COLUMN_INPUT_TYPES.WIDTH) ? minimumColumnWidth : 0;\n    const maxValue = (type === COLUMN_INPUT_TYPES.WIDTH) ? maxColumnWidth : maxColumnSpacing;\n\n    let newValue = parseFloat(value);\n    if (isNaN(newValue) || newValue < minimumValue) {\n      newValue = minimumValue;\n    }\n    newValue = Math.min(newValue, maxValue);\n\n    const newColumns = rebalanceInputs(newValue, index, type, columns);\n    setColumns(newColumns);\n    setInputColumns(formatColumns(newColumns));\n  };\n\n  const onApply = async () => {\n    const columnsData = columns.reduce((acc, column) => {\n      acc.push(parseFloat(column.width), parseFloat(column.spacing));\n      return acc;\n    }, []);\n    columnsData.pop(); // Remove the last spacing value\n    await core.getOfficeEditor().setCustomSectionColumns(columnsData, currentUnit);\n    closeModal();\n  };\n\n  const closeModal = () => {\n    dispatch(actions.closeElement(DataElements.OFFICE_EDITOR_COLUMNS_MODAL));\n  };\n\n  const closeModalAndFocus = () => {\n    closeModal();\n    focusContent();\n  };\n\n  const inputElements = Object.values(COLUMN_INPUT_TYPES).map((inputType) => ({\n    id: `${inputType}ColumnInput`,\n    label: t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.${inputType}`),\n    onChange: (value, index) => handleColumnChange(value, index, inputType),\n    onBlur: (value, index) => handleColumnBlur(value, index, inputType),\n    type: inputType,\n  }));\n\n  return (\n    <div className='OfficeEditorColumnsModal' data-element={DataElements.OFFICE_EDITOR_COLUMNS_MODAL}>\n      <ModalWrapper\n        title={t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.title`)}\n        closehandler={closeModalAndFocus}\n        onCloseClick={closeModalAndFocus}\n        swipeToClose\n        isOpen\n      >\n        <div className='modal-body'>\n          <div className='input-container flex-half'>\n            <label htmlFor='columnAmountInput' className='modal-label'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.columnAmount`)}</label>\n            <Input\n              type='number'\n              id='columnAmountInput'\n              onChange={(e) => handleColumnAmountChange(e.target.value)}\n              value={columnAmount}\n              min='1'\n              max={maxAllowedColumns}\n              step='1'\n              className='column-amount-input'\n            />\n          </div>\n\n          <div className='input-container flex-half'>\n            <label id='office-editor-column-unit-label' className='modal-label'>\n              {t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}unitMeasurement`)}\n            </label>\n            <Dropdown\n              id='office-editor-column-unit'\n              dataElement={DataElements.OFFICE_EDITOR_COLUMN_UNIT}\n              labelledById='office-editor-column-unit-label'\n              className={'unit-dropdown'}\n              items={Object.values(MARGIN_UNITS)}\n              onClickItem={handleUnitChange}\n              getKey={(item) => item}\n              currentSelectionKey={currentUnit}\n              width={'auto'}\n            />\n          </div>\n\n          <div className='section'>\n            <div className='section-label'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.widthAndSpacing`)}</div>\n            <div className='columns-headers row'>\n              <div className='flex-third'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.columnNumber`)}</div>\n              <div className='flex-third'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.width`)}</div>\n              <div className='flex-third'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.spacing`)}</div>\n            </div>\n            <div className='columns-container'>\n              {inputColumns.map((column, columnIndex) => {\n                const columnNumber = columnIndex + 1;\n                return <div key={columnNumber} className='row'>\n                  <div className='row-label flex-third'>\n                    {columnTranslation} {columnNumber}\n                  </div>\n                  {inputElements.map((input) => {\n                    const isLastColumn = columnIndex === inputColumns.length - 1;\n                    const isSpacingInput = input.type === COLUMN_INPUT_TYPES.SPACING;\n                    const shouldRender = !(isLastColumn && isSpacingInput);\n                    const shouldDisable = inputColumns.length === 1 || (equalColumns && columnNumber !== 1);\n                    return shouldRender &&\n                      <div key={`${columnNumber} ${input.id}`} className='input-container flex-third'>\n                        <Input\n                          type='number'\n                          id={`${input.id}-${columnNumber}`}\n                          onChange={(e) => input.onChange(e.target.value, columnIndex)}\n                          onBlur={(e) => input.onBlur(e.target.valueAsNumber, columnIndex)}\n                          value={column[input.type]}\n                          aria-label={`${columnTranslation} ${columnNumber} ${input.label}`}\n                          disabled={shouldDisable}\n                          min='0'\n                          step='0.1'\n                        />\n                      </div>;\n                  })}\n                </div>;\n              })}\n            </div>\n          </div>\n          <Choice\n            id={'equal-columns-checkbox'}\n            label={t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.equalColumns`)}\n            aria-label={t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.equalColumns`)}\n            checked={equalColumns}\n            aria-checked={equalColumns}\n            onChange={() => setEqualColumns(!equalColumns)}\n          />\n        </div>\n        <div className='footer'>\n          <Button onClick={onApply} label={t('action.apply')} />\n        </div>\n      </ModalWrapper>\n    </div>\n  );\n};\n\nexport default OfficeEditorColumnsModal;\n","import OfficeEditorColumnsModal from './OfficeEditorColumnsModal';\n\nexport default OfficeEditorColumnsModal;\n"],"sourceRoot":""}