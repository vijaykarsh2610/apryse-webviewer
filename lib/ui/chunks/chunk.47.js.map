{"version":3,"sources":["webpack:///./src/ui/src/components/FormulaOverlay/FormulaOverlay.scss?873e","webpack:///./src/ui/src/components/FormulaOverlay/FormulaOverlay.scss","webpack:///./src/ui/src/components/FormulaHelperOverlay/FormulaHelperOverlay.scss?d4e2","webpack:///./src/ui/src/components/FormulaHelperOverlay/FormulaHelperOverlay.scss","webpack:///./src/ui/src/components/FormulaBar/FormulaBar.scss?c368","webpack:///./src/ui/src/components/FormulaBar/FormulaBar.scss","webpack:///./src/ui/src/components/FormulaHelperOverlay/FormulaHelperOverlay.js","webpack:///./src/ui/src/components/FormulaHelperOverlay/index.js","webpack:///./src/ui/src/components/FormulaOverlay/FormulaOverlay.js","webpack:///./src/ui/src/components/FormulaBar/FormulaBar.js","webpack:///./src/ui/src/components/FormulaBar/FormulaBarContainer.js","webpack:///./src/ui/src/components/FormulaBar/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","FormulaHelperOverlay","props","selectedFormula","labelId","t","useTranslation","formulaLabel","name","formulaParameters","parameters","map","param","className","aria-labelledby","join","propTypes","PropTypes","object","string","FormulaOverlay","isOpen","onSelect","onClose","triggerElement","highlightedIndex","setHighlightedIndex","id","overlayRef","useRef","optionRefs","useEffect","current","scrollIntoView","behavior","block","handleClickOutside","useCallback","e","contains","target","useOnClickOutside","DataElementWrapper","dataElement","DataElements","FORMULA_OVERLAY","ref","role","option","index","key","classNames","onClick","onMouseEnter","aria-selected","tabIndex","description","isRequired","bool","arrayOf","shape","func","instanceOf","Element","number","FormulaBar","isReadOnly","activeCellRange","cellFormula","stringCellValue","onRangeInputChange","onRangeInputKeyDown","formulaBarValue","useState","inputValue","setInputValue","showOverlay","setShowOverlay","setSelectedFormula","formulaSearchResults","setFormulaSearchResults","formulaSegments","setFormulaSegments","isFormulaFocused","setIsFormulaFocused","formulaInputRef","formulaBarProviderRef","lastCellRef","spreadsheetEditorManager","core","getDocumentViewer","getSpreadsheetEditorManager","setProvider","getFormulaBarProvider","addEventListener","removeEventListener","handleFormulaSearchEvent","event","items","getFormulaInfoItems","handleFormulaBarTextChanged","segments","getInfo","updatedText","segment","_text","handleFormulaBarSelectionChangedEvent","focus","inputPosition","getSelectionPosition","setSelectionRange","handleFormulaHelpEvent","getFormulaInfo","currentCell","handleOptionSelect","onFormulaBarSelectFormula","onFormulaBarTextChange","handleOverlayClose","handleInputChange","value","onFormulaBarSelectionChanged","selectionStart","handleInputFocus","onFormulaBarFocus","overlayID","FORMULA_BAR","handleKeyDown","preventDefault","prev","shiftKey","stopPropagation","onFormulaBarKeyDown","type","onChange","onKeyDown","aria-label","readOnly","Icon","glyph","item","text","style","color","onFocus","aria-autocomplete","aria-expanded","aria-controls","hasFormula","aria-activedescendant","undefined","onBlur","relatedTarget","closest","oneOfType","EDIT_MODE","Core","SpreadsheetEditor","SpreadsheetEditorEditMode","FormulaBarContainer","useSelector","selectors","getActiveCellRange","getCellFormula","getStringCellValue","isReadOnlyMode","getSpreadsheetEditorEditMode","VIEW_ONLY","rangeInputValue","setRangeInputValue","spreadsheetEditorDocument","getDocument","getSpreadsheetEditorDocument","cellRange","getCellRange","selectCellRange","console","error"],"mappings":"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","file":"chunks/chunk.47.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./FormulaOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".FormulaOverlay{max-height:320px;width:320px;position:absolute;top:100%;left:0;background:var(--component-background);z-index:90;list-style:none;margin:0;padding:var(--padding-tiny) 0;box-shadow:0 0 3px 0 var(--box-shadow);border-radius:var(--border-radius);overflow-x:hidden;overflow-y:auto}.FormulaOverlay .formula-label{display:flex;font-weight:var(--font-weight-bold);height:28px;padding:var(--padding-tiny) var(--padding-small);line-height:20px}.FormulaOverlay .formula-overlay-list{list-style:none;padding:0;margin:0}.FormulaOverlay .formula-option{cursor:pointer;display:flex;flex-direction:column;padding:var(--padding-tiny) var(--padding-small);height:32px;line-height:20px}.FormulaOverlay .formula-option .formula-description{font-size:10px;color:var(--text-secondary);line-height:16px}.FormulaOverlay .formula-option.highlighted{background-color:var(--dropdown-item-hover);color:var(--dropdown-item-active-text);height:44px}.FormulaOverlay .formula-option.highlighted .formula-name{font-weight:var(--font-weight-bold)}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./FormulaHelperOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".FormulaHelperOverlay .formulaHelperOverlayValue{display:inline-block;padding:var(--padding-tiny) var(--padding-small)}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./FormulaBar.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".FormulaBar{display:flex;border:1px solid var(--gray-5);background-color:var(--gray-2);padding:8px;grid-gap:8px;gap:8px;border-bottom:1px solid #e0e0e0;position:relative}.FormulaBar .RangeInput{padding:6px 8px}.FormulaBar .RangeInput.focus-visible,.FormulaBar .RangeInput:focus-visible{outline:var(--focus-visible-outline)!important}.FormulaBar .Formula{display:flex;align-items:center;flex-grow:1;height:32px;position:relative;border:1px solid var(--border);border-radius:4px;background-color:var(--component-background);padding-left:30px}.FormulaBar .Formula .FormulaInput{position:relative;z-index:1;flex-grow:1;width:100%;padding:6px 8px;border:none;outline:none;font-size:14px;background-color:transparent}.FormulaBar .Formula .FormulaInput.hasFormula{color:transparent;caret-color:var(--gray-13)}.FormulaBar .Formula .FormulaOverlay{transform:translateX(38px);transform-origin:left top}.FormulaBar .Formula.readOnly{border-color:var(--lighter-border)}.FormulaBar .Formula[focus-within]{outline:var(--focus-visible-outline)!important}.FormulaBar .Formula:focus-within{outline:var(--focus-visible-outline)!important}.FormulaBar .Formula .FormulaInputMask{position:absolute;top:0;color:transparent;pointer-events:none;white-space:pre-wrap;width:100%;padding:6px 8px;font-size:14px;z-index:0}.FormulaBar .FormulaIcon{position:absolute;left:8px}.FormulaBar .FormulaIcon.readOnly{color:var(--disabled-icon)}.FormulaBar .FormulaInput{flex-grow:1;width:100%;padding:6px 8px;border:none;outline:none;background-color:transparent}\", \"\"]);\n\n// exports\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport './FormulaHelperOverlay.scss';\n\nconst FormulaHelperOverlay = (props) => {\n  const { selectedFormula, labelId } = props;\n  const { t } = useTranslation();\n\n  const formulaLabel = selectedFormula?.name || '';\n  const formulaParameters = selectedFormula?.parameters?.map((param) =>\n    t(`formulas.${selectedFormula.name}.parameters.${param.name}.name`, param.name)\n  ) || [];\n\n  return (\n    <div className=\"FormulaHelperOverlay\" aria-labelledby={labelId}>\n      <span className=\"formulaHelperOverlayValue\">\n        {formulaLabel}({formulaParameters.join(', ')})\n      </span>\n    </div>\n  );\n};\n\nFormulaHelperOverlay.propTypes = {\n  selectedFormula: PropTypes.object,\n  labelId: PropTypes.string,\n};\n\nexport default FormulaHelperOverlay;","import FormulaHelperOverlay from './FormulaHelperOverlay';\n\nexport default FormulaHelperOverlay;","import React, { useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport { useTranslation } from 'react-i18next';\nimport './FormulaOverlay.scss';\nimport FormulaHelperOverlay from '../FormulaHelperOverlay';\nimport DataElementWrapper from '../DataElementWrapper';\nimport DataElements from 'constants/dataElement';\n\nconst FormulaOverlay = ({\n  isOpen,\n  options,\n  onSelect,\n  onClose,\n  triggerElement,\n  highlightedIndex,\n  setHighlightedIndex,\n  selectedFormula,\n  id,\n}) => {\n  const { t } = useTranslation();\n  const overlayRef = useRef(null);\n  const optionRefs = useRef([]);\n\n  useEffect(() => {\n    if (optionRefs.current[highlightedIndex]) {\n      optionRefs.current[highlightedIndex].scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n      });\n    }\n  }, [highlightedIndex]);\n\n  const handleClickOutside = useCallback((e) => {\n    if (isOpen && !triggerElement?.contains(e.target)) {\n      onClose();\n    }\n  }, [isOpen, onClose, triggerElement]);\n\n  useOnClickOutside(overlayRef, handleClickOutside);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <DataElementWrapper dataElement={DataElements.FORMULA_OVERLAY} className=\"FormulaOverlay\">\n      <span id='formula-overlay-label' className='formula-label'>\n        {t('formulaBar.formulas')}\n      </span>\n      {!selectedFormula && (\n        <ul\n          ref={overlayRef}\n          className=\"formula-overlay-list\"\n          role=\"listbox\"\n          aria-labelledby=\"formula-overlay-label\"\n          id={id}\n        >\n          {options.map((option, index) => (\n            <li\n              key={`${option.name}-${index}`}\n              ref={(el) => (optionRefs.current[index] = el)}\n              className={classNames('formula-option', {\n                'highlighted': highlightedIndex === index,\n              })}\n              onClick={() => onSelect(option)}\n              onMouseEnter={() => setHighlightedIndex(index)}\n              id={`option-${index}`}\n              role=\"option\"\n              aria-labelledby={`formula-name-${index} formula-desc-${index}`}\n              aria-selected={highlightedIndex === index}\n              tabIndex={0}\n            >\n              <div id={`formula-name-${index}`} className=\"formula-name\">{option.name}</div>\n              {highlightedIndex === index && (\n                <div id={`formula-desc-${index}`} className=\"formula-description\">\n                  {t(`formulas.${option.name}.description`, option.description)}\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      {selectedFormula && (\n        <FormulaHelperOverlay\n          selectedFormula={selectedFormula}\n          labelId=\"formula-overlay-label\"\n        />\n      )}\n    </DataElementWrapper>\n  );\n};\n\nFormulaOverlay.propTypes = {\n  id: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  triggerElement: PropTypes.instanceOf(Element),\n  highlightedIndex: PropTypes.number.isRequired,\n  setHighlightedIndex: PropTypes.func.isRequired,\n  selectedFormula: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string.isRequired,\n    parameters: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default FormulaOverlay;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport Icon from 'components/Icon';\nimport DataElements from 'constants/dataElement';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport FormulaOverlay from 'components/FormulaOverlay/FormulaOverlay';\nimport core from 'core';\nimport './FormulaBar.scss';\n\nconst FormulaBar = (props) => {\n  const {\n    isReadOnly,\n    activeCellRange,\n    cellFormula,\n    stringCellValue,\n    onRangeInputChange,\n    onRangeInputKeyDown,\n  } = props;\n\n  const { t } = useTranslation();\n  const formulaBarValue = cellFormula || stringCellValue || '';\n\n  const [inputValue, setInputValue] = useState(formulaBarValue);\n  const [showOverlay, setShowOverlay] = useState(false);\n  const [highlightedIndex, setHighlightedIndex] = useState(0);\n  const [selectedFormula, setSelectedFormula] = useState(null);\n  const [formulaSearchResults, setFormulaSearchResults] = useState([]);\n  const [formulaSegments, setFormulaSegments] = useState([]);\n  const [isFormulaFocused, setIsFormulaFocused] = useState(false);\n\n  const formulaInputRef = useRef(null);\n  const formulaBarProviderRef = useRef(null);\n  const lastCellRef = useRef();\n\n  const spreadsheetEditorManager = core.getDocumentViewer().getSpreadsheetEditorManager();\n\n  useEffect(() => {\n    function setProvider() {\n      formulaBarProviderRef.current = spreadsheetEditorManager.getFormulaBarProvider();\n    }\n\n    core.addEventListener('spreadsheetEditorReady', setProvider);\n\n    return () => {\n      core.removeEventListener('spreadsheetEditorReady', setProvider);\n    };\n  }, [spreadsheetEditorManager]);\n\n  useEffect(() => {\n    const handleFormulaSearchEvent = (event) => {\n      if (!isFormulaFocused) {\n        return;\n      }\n\n      const items = event.getFormulaInfoItems?.() ?? [];\n      setFormulaSearchResults(items);\n      setHighlightedIndex(0);\n    };\n\n    core.addEventListener('formulaSearchEvent', handleFormulaSearchEvent);\n\n    return () => {\n      core.removeEventListener('formulaSearchEvent', handleFormulaSearchEvent);\n    };\n  }, [isFormulaFocused]);\n\n  useEffect(() => {\n    const handleFormulaBarTextChanged = (event) => {\n      const segments = event.getInfo();\n      setFormulaSegments(segments);\n\n      const updatedText = segments.map((segment) => segment._text).join('');\n      setInputValue(updatedText);\n    };\n\n    const handleFormulaBarSelectionChangedEvent = (event) => {\n      formulaInputRef.current?.focus();\n      const inputPosition = event.getSelectionPosition();\n      formulaInputRef.current?.setSelectionRange(inputPosition, inputPosition);\n    };\n\n    const handleFormulaHelpEvent = (event) => {\n      setSelectedFormula(event.getFormulaInfo());\n    };\n\n    core.addEventListener('formulaBarTextChangedEvent', handleFormulaBarTextChanged);\n    core.addEventListener('formulaBarSelectionChangedEvent', handleFormulaBarSelectionChangedEvent);\n    core.addEventListener('formulaHelpEvent', handleFormulaHelpEvent);\n\n    return () => {\n      core.removeEventListener('formulaBarTextChangedEvent', handleFormulaBarTextChanged);\n      core.removeEventListener('formulaBarSelectionChangedEvent', handleFormulaBarSelectionChangedEvent);\n      core.removeEventListener('formulaHelpEvent', handleFormulaHelpEvent);\n    };\n  }, []);\n\n  useEffect(() => {\n    const currentCell = activeCellRange;\n    if (lastCellRef.current !== currentCell) {\n      setInputValue(formulaBarValue);\n      lastCellRef.current = currentCell;\n    }\n  }, [activeCellRange, formulaBarValue]);\n\n  const handleOptionSelect = useCallback((option) => {\n    if (formulaBarProviderRef.current) {\n      formulaBarProviderRef.current.onFormulaBarSelectFormula(option.name);\n      formulaBarProviderRef.current.onFormulaBarTextChange(option.name);\n    }\n  }, []);\n\n  const handleOverlayClose = useCallback(() => {\n    setShowOverlay(false);\n  }, []);\n\n  const handleInputChange = useCallback((e) => {\n    const value = e.target.value;\n    setInputValue(value);\n    setFormulaSegments([]);\n    if (formulaBarProviderRef.current) {\n      formulaBarProviderRef.current.onFormulaBarSelectionChanged(formulaInputRef.current.selectionStart);\n      formulaBarProviderRef.current.onFormulaBarTextChange(value);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (formulaSearchResults.length === 0 && !selectedFormula || !isFormulaFocused) {\n      setShowOverlay(false);\n    } else {\n      setShowOverlay(true);\n    }\n  }, [formulaSearchResults, selectedFormula]);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFormulaFocused(true);\n    if (formulaBarProviderRef.current) {\n      formulaBarProviderRef.current.onFormulaBarFocus();\n    }\n  }, []);\n\n  const overlayID = `formula-overlay-${DataElements.FORMULA_BAR}`;\n\n  const handleInputBlur = (e) => {\n    if (showOverlay && !e.relatedTarget?.closest(`#${overlayID}`)) {\n      handleOverlayClose();\n    }\n    setIsFormulaFocused(false);\n  };\n\n  const handleKeyDown = useCallback((e) => {\n    if (showOverlay && !isReadOnly) {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setHighlightedIndex((prev) => (prev + 1) % formulaSearchResults.length);\n          return;\n        case 'ArrowUp':\n          e.preventDefault();\n          setHighlightedIndex((prev) => (prev - 1 + formulaSearchResults.length) % formulaSearchResults.length);\n          return;\n        case 'Enter':\n          if (formulaSearchResults[highlightedIndex]) {\n            handleOptionSelect(formulaSearchResults[highlightedIndex]);\n            return;\n          }\n          break;\n        case 'Tab':\n          if (!e.shiftKey) {\n            e.preventDefault();\n            if (formulaSearchResults[highlightedIndex]) {\n              handleOptionSelect(formulaSearchResults[highlightedIndex]);\n            }\n            return;\n          }\n          break;\n        case 'Escape':\n          e.stopPropagation();\n          handleOverlayClose();\n          return;\n        default:\n          break;\n      }\n    }\n    if (formulaBarProviderRef.current) {\n      formulaBarProviderRef.current.onFormulaBarSelectionChanged(formulaInputRef.current.selectionStart);\n      formulaBarProviderRef.current.onFormulaBarKeyDown(e);\n    }\n  }, [showOverlay, isReadOnly, formulaSearchResults, highlightedIndex, handleOptionSelect, handleOverlayClose]);\n\n  return (\n    <DataElementWrapper className='FormulaBar' dataElement={DataElements.FORMULA_BAR}>\n      <input\n        type=\"text\"\n        className='RangeInput'\n        value={activeCellRange}\n        onChange={(e) => onRangeInputChange(e.target.value)}\n        onKeyDown={onRangeInputKeyDown}\n        aria-label={t('formulaBar.range')}\n      />\n      <div className={classNames('Formula', { readOnly: isReadOnly })}>\n        <Icon glyph=\"function\" className={classNames('FormulaIcon', { readOnly: isReadOnly })} />\n        <div className='FormulaInputMask'>\n          {\n            formulaSegments.map((item, index) => {\n              return (<span key={`${item.text}-${index}`} style={{ color: item.color }}>{item.text}</span>);\n            })\n          }\n        </div>\n        <input\n          onFocus={handleInputFocus}\n          id={DataElements.FORMULA_BAR}\n          ref={formulaInputRef}\n          type=\"text\"\n          role=\"combobox\"\n          aria-autocomplete=\"list\"\n          aria-expanded={formulaSearchResults.length > 0}\n          aria-controls={overlayID}\n          className={classNames({\n            'FormulaInput': true,\n            hasFormula: formulaSegments.length > 0,\n          })}\n          aria-activedescendant={showOverlay && highlightedIndex !== -1 ? `option-${highlightedIndex}` : undefined}\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputBlur}\n          onKeyDown={handleKeyDown}\n          readOnly={isReadOnly}\n          aria-label={t('formulaBar.label')}\n        />\n        {showOverlay && !isReadOnly && (\n          <FormulaOverlay\n            isOpen={showOverlay}\n            options={formulaSearchResults}\n            onSelect={handleOptionSelect}\n            onClose={handleOverlayClose}\n            triggerElement={formulaInputRef.current}\n            highlightedIndex={highlightedIndex}\n            setHighlightedIndex={setHighlightedIndex}\n            selectedFormula={selectedFormula}\n            id={overlayID}\n          />\n        )}\n      </div>\n    </DataElementWrapper>\n  );\n};\n\nFormulaBar.propTypes = {\n  isReadOnly: PropTypes.bool,\n  activeCellRange: PropTypes.string,\n  cellFormula: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  stringCellValue: PropTypes.string,\n  onRangeInputChange: PropTypes.func,\n  onRangeInputKeyDown: PropTypes.func,\n};\n\nexport default FormulaBar;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport FormulaBar from './FormulaBar';\nimport core from 'core';\n\nconst EDIT_MODE = window.Core.SpreadsheetEditor.SpreadsheetEditorEditMode;\n\nexport const FormulaBarContainer = () => {\n  // This component can pull all Redux state and call any core methods\n  const activeCellRange = useSelector(selectors.getActiveCellRange);\n  const cellFormula = useSelector(selectors.getCellFormula);\n  const stringCellValue = useSelector(selectors.getStringCellValue);\n  const spreadsheetEditorEditMode = useSelector(selectors.getSpreadsheetEditorEditMode);\n  const isReadOnlyMode = spreadsheetEditorEditMode === EDIT_MODE.VIEW_ONLY;\n\n  const [rangeInputValue, setRangeInputValue] = useState(activeCellRange);\n\n  const onRangeInputChange = (value) => {\n    setRangeInputValue(value);\n  };\n\n  const onRangeInputKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      try {\n        const documentViewer = core.getDocumentViewer();\n        const spreadsheetEditorDocument = documentViewer.getDocument().getSpreadsheetEditorDocument();\n        const cellRange = core.getCellRange(event.target.value);\n        spreadsheetEditorDocument.selectCellRange(cellRange);\n      } catch (e) {\n        setRangeInputValue(activeCellRange);\n        console.error(e);\n        return;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setRangeInputValue(activeCellRange);\n  }, [activeCellRange]);\n\n  return (\n    <FormulaBar\n      isReadOnly={isReadOnlyMode}\n      activeCellRange={rangeInputValue}\n      cellFormula={cellFormula}\n      stringCellValue={stringCellValue}\n      onRangeInputChange={onRangeInputChange}\n      onRangeInputKeyDown={onRangeInputKeyDown}\n    />\n  );\n};\n\nexport default FormulaBarContainer;","import FormulaBarContainer from './FormulaBarContainer';\nexport default FormulaBarContainer;"],"sourceRoot":""}